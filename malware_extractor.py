import logging
import os
import shutil


logger = logging.getLogger(__name__)


class MalwareExtractor:
    def __init__(self, collector_path, extracted_path):
        self.collector_path = collector_path
        self.extracted_path = extracted_path

    @staticmethod
    def copy_one_file(input_path, output_path, filename):
        input_file = os.path.join(input_path, filename)
        output_file = os.path.join(output_path, filename)
        if not os.path.exists(output_file):
            shutil.copy(input_file, output_file)

    def copy_files(self):
        # if all that's needed is to copy files from one directory to another,
        # there's no need to copy that between Extractors.
        for dirpath, dirnames, filenames in os.walk(self.collector_path):
            if filenames:
                # skip processing if there's nothing but directories
                input_path = os.path.join(self.collector_path, dirpath)
                output_path = os.path.join(self.extracted_path, dirpath)
                if not os.path.exists(output_path):
                    os.makedirs(output_path, exist_ok=True)
                for filename in filenames:
                    logger.info(f"Copying {filename} to extracted path")
                    self.copy_one_file(input_path, output_path, filename)

    def process_input(self):
        raise NotImplemented
