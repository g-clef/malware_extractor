import logging
import os

from malware_extractor import MalwareExtractor


logger = logging.getLogger(__name__)


class MalwareBazaarExtractor(MalwareExtractor):
    def process_input(self):
        # files in here are in subdirectories named for each malware family. In each malware
        # is password protected. In practice it looks like the password in each case is "infected", but
        # since they provide a password file with each malware, I don't like assuming that.
        # we should check each zipfile, and if it's *not* "infected", extract and re-compress the zipfile
        # with that password, since that's what our stoq side will be expecting.
        for (dirpath, dirnames, filenames) in os.walk(self.collector_path):
            if filenames:
                pass


if __name__ == "__main__":
    logger.info("Malware Bazaar Extractor starting up.")
    # assume mounted path is path to directory of files, so skipping any need for sub-directories.
    collector_path = os.environ.get("COLLECTOR_PATH")
    extractor_path = os.environ.get("EXTRACTOR_PATH")
    extractor = MalwareBazaarExtractor(collector_path, extractor_path)
    extractor.process_input()
    logger.info("Malware Bazaar Extractor completed.")
