import logging
import os

from malware_extractor import MalwareExtractor


logger = logging.getLogger(__name__)


class MalshareExtractor(MalwareExtractor):
    def process_input(self):
        # files in here are paired "hashval.knownsuffix" and "hashval.sources.txt"
        # when available, sources.txt includes the URL that the malware was downloaded from.
        # that seems really inconsistent, so I'm going to ignore it for the moment.
        for malware in os.listdir(self.collector_path):
            if malware.endswith(".sources.txt"):
                continue
            logger.info(f"Copying {malware} to extracted path")
            self.copy_one_file(self.collector_path, self.extracted_path, malware)


if __name__ == "__main__":
    logger.info("Malshare Extractor starting up.")
    # assume mounted path is path to directory of files, so skipping any need for sub-directories.
    collector_path = os.environ.get("COLLECTOR_PATH")
    extractor_path = os.environ.get("EXTRACTOR_PATH")
    extractor = MalshareExtractor(collector_path, extractor_path)
    extractor.process_input()
    logger.info("Malshare Extractor completed.")
